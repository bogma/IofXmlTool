<!-- Supported types: Team, Cup, Sum -->
<Configuration type="Cup">
  <!-- The general section defines the overal settings for the project. -->
  <!-- name:                   Name of event. Can be used in output template with {{{title}}} -->
  <!-- year:                   Year when the event takes place. Can be used in output template with {{{year}}} -->
  <!-- numberOfPlannedEvents:  How many events were originally planned for the cup -->
  <!-- numberOfValidEvents:    How many events have taken place or are considered to be valid -->
  <!-- numberOfCountingEvents: Number of results taken into account for each runner -->
  <!-- calcRule:               Name of the calculation rule to use -->
  <!-- resultFileRegex:         -->
  <!-- recurseSubDirs:         Search also in subdirectory tree for result files. -->
  <!-- includeStatus:          Comma separated list of result states to include in the output. -->
  <!-- eventTitle:              -->
  <!-- showEvents:             Which events shall be shown in the output: All, OmitAllMissing, OmitTailMissing. -->
  <!-- showCompetitors:        Number of competitors to list per categorie (-1 = all). Can be used to list only the first 3 for example. -->
  <General name="Sportvogl Cup 2016"
           year="2016"
           numberOfPlannedEvents="9"
           numberOfValidEvents="7"
           numberOfCountingEvents="4"
           calcRule="rule_name"
           resultFileRegex="SC_\d{2}_2020"
           recurseSubDirs="false"
           includeStatus="DidNotFinish,MissingPunch"
           eventTitle="Sbg.Cup"
           showEvents="All"
           showCompetitors="-1">
  </General>
  <!-- Preprocessing options for input files. Each input file will be processed by all the task defined here. -->
  <!-- Supported tasks: fromCSV, toUtf8, toJson. -->
  <!-- Task will be running in the order of the given 'sequence'. -->
  <!-- Each task can be activated (true) or deactivated (false). -->
  <PreProcessing>
    <!-- options for input file preprocessing -->
    <Task name="fromCSV" sequence="1" active="true">
      <Param key="separator">;</Param>
      <Param key="encoding">iso-8859-1</Param>
      <Param key="controlCard">Chipnr</Param>
      <Param key="givenName">Vorname</Param>
      <Param key="familyName">Nachname</Param>
      <Param key="notCompeting">AK</Param>
      <Param key="status">Wertung</Param>
      <Param key="time">Zeit</Param>
      <Param key="position">Platz</Param>
      <Param key="orgId">Club-Nr.</Param>
      <Param key="orgName">Ort</Param>
      <Param key="classId">Katnr</Param>
      <Param key="className">Lang</Param>
      <Param key="classNameShort">Kurz</Param>
      precision
    </Task>
    <Task name="toUtf8" sequence="2" active="true" />
    <Task name="toJson" sequence="3" active="true" />
  </PreProcessing>
  <PostProcessing>
    <!-- options for result postprocessing -->
    <Task name="sumOrganisations" sequence="1" active="true">
      <Param key="outputPrefix">Vereine</Param>
      <!-- sumType: all ... sum up all points from competitors -->
      <!-- sumType: cup ... sum up cup points from competitors -->
      <Param key="sumType">all</Param>
    </Task>
    <Task name="dummy" sequence="2" active="false">
      <!-- dummy task needed to declare Tasks array -->
    </Task>
  </PostProcessing>
  <Events>
    <!-- set num to 0 if not needed -->
    <Event num="1" date="1. Juli 1994" name="Chicken Tag 1" fileName="">
      <map type="class" from="a" to="b" />
      <map type="org" from="c" to="d" />
    </Event>
    <Event num="9" multiply="2.0" calcRule="participate" />
    <Event num="11" multiply="3.0" />
  </Events>
  <Classes filter="include" presentationOrder="a,1,3,5,2,4,6">
    <!-- filter = include ... includes all Classes listed
         filter = exclude ... excludes all Classes listed
         any other filter ... use all Classes in result file -->
    <Class name="Oberstufe Herren" id="1" shortName="OS H" calcRule="SbgCup"/>
    <Class name="Oberstufe Damen" id="2" shortName="OS D" />
    <Class name="Unterstufe Herren -2006" id="3" shortName="US H -06" />
    <Class name="Unterstufe Damen -2006" id="4" shortName="US D -06" />
    <Class name="Unterstufe Herren 2004/05" id="5" shortName="US H 04/05"/>
    <Class name="Unterstufe Damen 2004/05" id="6" shortName="US D 04/05" />
    <Class name="Unterstufe Herren" id="11" shortName="US H"/>
    <Class name="Unterstufe Damen" id="12" shortName="US D" />
    <!-- list class ids (comma separated) to be combined to one virtual 'class' -->
    <Combine name="Unterstufe Herren" classIds="abc" shortName="US H"/>
    <Combine name="Unterstufe Damen" classIds="efg,uvs" shortName="US H"/>
  </Classes>
  <Organisations filter="include">
    <!-- filter = include ... includes all Organisations listed
         filter = exclude ... excludes all Organisations listed
         any other filter ... use all Organisations in result file -->
    <!-- This list of organisations can be used to override the organisation name. -->
    <!-- if name is "" the name found in the first result file containing the organisation will be used -->
    <Organisation name="ASKÃ– Henndorf" id="32" />
    <Organisation name="SSV Hallein-Neualm" id="35" />
    <Organisation name="HBLA Ursprung" id="52" />
    <Organisation name="HSV Wals" id="33" />
  </Organisations>
  <!-- 3 types of outputs are supported: Html, Pdf, Json -->
  <!-- Hence: the Pdf output can only be generated if Html output is active. -->
  <Output>
    <!-- active:    if true the output will be generated -->
    <!-- fileName:  the output file name -->
    <!-- cssInline: if true the css will be embedded in the output file, otherwise it's referenced -->
    <!-- docTemplate: the main template for the html output -->
    <!-- classTemplate: the template for rendering class results -->
    <!-- detailsTemplate: the template for rendering the result of a person -->
    <!-- pageOrientation: Landscape or Portrait (default: Portrait) -->
    <!-- pageSize: A5, A4, A3 (default: A4) -->
    <!-- margin*: margin in mm (default: 20) -->
    <Html active="true"
          fileName="cup-2016.html"
          cssInline="true"
          docTemplate="./document_template.html"
          classTemplate="./class_template.html"
          detailsTemplate="./details_template.html"
          cssFile="./default.css" />
    <Pdf active="true"
         fileName="cup-2016.pdf"
         pageOrientation="Landscape"
         pageSize="A4"
         marginLeft="10"
         marginTop="20"
         marginRight="10"
         marginBottom="20" />
    <Json active="true" fileName="cup-2016.json" />
  </Output>
  <Names>
    <!-- This list of name definitions can be used to correct misspelled names. -->
    <!-- The 'name' attribute contains the name to be shown in the result. -->
    <!-- The 'aliasFor' attribute contains a list of names that will be replaced with the value of 'name'. -->
    <Name name="Bubu" aliasFor="der Hund, the great"/>
    <Name name="John Doe" aliasFor="Jon Doe, John Toe"/>
  </Names>
  <Translations>
    <!-- Translations of result status. The 'translate' value will be shown in the output. -->
    <Translation key="DidNotFinish" translate="aufg." />
    <Translation key="DidNotStart" translate="n ang." />
    <Translation key="MissingPunch" translate="Fehlst." />
  </Translations>
</Configuration>